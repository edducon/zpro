#include <iostream>
using namespace std;

struct Node {
    string val;
    Node* next;

    Node(string _val) : val(_val), next(nullptr) {}
};

struct list {
    Node* first;
    Node* last;

    list() : first(nullptr), last(nullptr) {}

    bool is_empty() {
        return first == nullptr;
    }

    void push_back(string _val) {
        Node* p = new Node(_val);
        if (is_empty()) {
            first = p;
            last = p;
            return;
        }
        last->next = p;
        last = p;
    }

    void print() {
        if (is_empty()) return;
        Node* p = first;
        while (p) {
            cout << p->val << " ";
            p = p->next;
        }
        cout << endl;
    }
    
    float foo() 
    {
        if (is_empty()) return 0.0;
        Node* p = first;
        float iSumm = 0;
        int iEntered = 0;
        float mean = 0.0;
        while (p) {
            iSumm += atof(p->val.c_str());
            iEntered++;
            p = p->next;
        }
        mean = iSumm/iEntered;
        return mean;
    }
};

int main() {
    list nums;
    char base_str[256];
    cin.getline(base_str, 256);
    char word[256];
    int index = 0;
    char* p;
    for (p = base_str; *p; p++)
    {
        if (*p == ' ')
        {
            if (index != 0)
            {
                word[index] = '\0';
                nums.push_back(word);
                index = 0;
            }
        }
        else
            word[index++] = *p;
    }
    cout << nums.foo() << endl;
    return 0;
}
